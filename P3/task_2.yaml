AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06b21ccaeff8cd686
      InstanceType: t2.micro
      SubnetId: !Ref Subnet
      UserData: !Base64 |
              #!/bin/bash
              yum update -y
              yum install -y httpd
              yum install -y uuid
              echo "<h1>Instance ID: $(uuid)</h1>" > /var/www/html/index.html
              systemctl start httpd
              systemctl enable httpd
  Instance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06b21ccaeff8cd686
      InstanceType: t2.micro
      SubnetId: !Ref Subnet
      UserData: !Base64 |
              #!/bin/bash
              yum update -y
              yum install -y httpd
              yum install -y uuid
              echo "<h1>Instance ID: $(uuid)</h1>" > /var/www/html/index.html
              systemctl start httpd
              systemctl enable httpd
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Listeners:
        - InstancePort: '80'
          LoadBalancerPort: '80'
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: 3
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5
      Instances:
        - !Ref Instance
        - !Ref Instance2
      Subnets:
        - !Ref Subnet
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup

  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      ResourceId: !Sub 'service/${AWS::StackName}-instance'
      ServiceNamespace: ec2
      ScalableDimension: ec2:instance:DesiredCapacity
      MinCapacity: 1
      MaxCapacity: 5
      RoleARN: arn:aws:iam::123456789012:role/ApplicationAutoScalingRole
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

Metadata:
  AWS::Composer::Groups:
    Group1:
      Label: Load Balancer & Auto Scaling
      Members:
        - LoadBalancer
        - ScalableTarget
    Group2:
      Label: EC2 Instances
      Members:
        - Instance
        - Instance2

Outputs:
  LoadBalancerDNSName:
    Value: !GetAtt LoadBalancer.DNSName
    Description: The DNS name of the load balancer
  LoadBalancerSecurityGroup:
    Value: !Ref LoadBalancerSecurityGroup
    Description: The security group for the load balancer
  VPC:
    Value: !Ref VPC
    Description: The VPC ID
  Subnet:
    Value: !Ref Subnet
    Description: The subnet ID
  Instance:
    Value: !Ref Instance
    Description: The instance ID
  Instance2:
    Value: !Ref Instance2
    Description: The instance ID
  ScalableTarget:
    Value: !Ref ScalableTarget
    Description: The scalable target ARN
  PublicName:
    Value: !GetAtt Instance.PublicDnsName
    Description: The public DNS name of the instance (connect via SSH as ec2-user)
